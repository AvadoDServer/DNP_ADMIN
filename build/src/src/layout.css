:root {
  --sidebar-breakpoint: 40rem;
  --sidenav-width: 12.5rem;
  --topbar-width: 3.5rem;
  --container-padding: 1.5rem;
  --color-white: white;
  --color-border: #e5e5e5;
  --color-background: #f7f9f9a8;
  --border-size: 0.08rem;
  --border-style: var(--border-size) solid var(--color-border);
  --default-spacing: 1.25rem;
}

/* 
  !!!!!!!!!!!
   Move this
  !!!!!!!!!!!

  TEXT STYLES 
*/
body {
  font-family: overpass, sans-serif !important;
}
.sidenav-toggler {
  background: none;
  border: none;
  cursor: pointer;
  padding: 0;
  /* Just by declaring flex the inner items (the svg) is centered vertically */
  display: flex;
  opacity: 0.7;
}
.sidenav-toggler:hover {
  opacity: 1;
}

/* 
  !!!!!!!!!!!
      end
  !!!!!!!!!!!
*/

/* Reset margins and underlying sizes. 
   The height 100% is necessary so child elements have a reference to be full width
*/

html,
body,
#root {
  margin: 0;
  padding: 0;
  height: 100%;
  /* On really small screens when the sidebar opens the whole page clips
     prevent the appearing scrollbars by hidding the overflow
   */
  overflow: hidden;
}

/*****
  BODY
  ****
  Body is the main app container. 
  It will always have a fix height of the entire screen
  and only the main content area is scrollable 
*/
.body {
  height: 100vh;
  display: grid;
  grid-template:
    "sidebar topbar" var(--topbar-width)
    "sidebar main" auto
    / auto 1fr;
}

/********
  SIDEBAR
  ******* 
  The sidebar divided in two areas to match the header 
  The responsiveness is controlled by making the width = 0 
*/
#sidebar {
  grid-area: sidebar;
  /* Basic sizing */
  height: 100vh;
  width: var(--sidenav-width);
  transition: width 0.25s;
  /* When the sidenav collapses, hidde its content */
  overflow: hidden;
  /* While the sidenav is collapsing, make sure the content stays straight */
  white-space: nowrap;
  /* Colors */
  background-color: var(--color-white);
  border-right: var(--border-style);
  box-shadow: rgba(0, 0, 0, 0.1) 1px 0px 15px;
  /* place sidebar on top of the header and content */
  z-index: 2;
  /* Nested grid */
  display: grid;
  align-items: start;
  grid-template-rows: var(--topbar-width) auto min-content;
}
/* SIDEBAR > TOP */
#sidebar .top {
  height: var(--topbar-width);
  border-bottom: var(--border-style);
}
.sidebar-logo {
  width: calc(0.7 * var(--sidenav-width));
}
/* SIDEBAR > NAV */
#sidebar .nav {
  padding: 0.8rem 0;
}
.sidenav-item {
  display: grid;
  grid-template-columns: 1rem 2rem auto;
  grid-gap: 10px;
  place-items: center start;
  transition: all 0.5s;
}
.sidenav-item .icon,
.sidenav-item svg {
  grid-column: 2/3;
  opacity: 0.3;
}
.sidenav-item .header,
.sidenav-item .subheader {
  grid-column: 2/4;
}

@media only screen and (max-width: 40rem) {
  #sidebar.collapsed {
    width: 0;
    border-right-width: 0;
  }
}

/* Styles below apply when screen width big */
@media (min-width: 40rem) {
  .sidenav-toggler {
    display: none;
  }
}

/*******
  TOPBAR
  ******
  The topbar will always be visible and fixed on the top of the screen
*/
#topbar {
  grid-area: topbar;
  /* Postion left and right divs on each side + security gap margin */
  display: grid;
  grid-template-columns: auto auto;
  grid-gap: 1em;
  /* Colors */
  background-color: var(--color-white);
  border-bottom: var(--border-style);
  padding: 0 var(--container-padding);
}
#topbar .right,
#topbar .left {
  display: flex;
  align-items: center;
}

/* Align right to the right so the position does not change when the left div is not there */
#topbar .right {
  --icon-size: 1.5rem;
  flex: auto;
  display: grid;
  /* Create as much columns as necessary aligned center vertically and justified to the right */
  grid-template-columns:
    minmax(var(--icon-size), min-content)
    min-content
    minmax(var(--icon-size), min-content)
    minmax(var(--icon-size), min-content)
    min-content
    minmax(var(--icon-size), min-content);
  grid-auto-flow: column;
  place-content: center end;
  /* Auto-space the items only in-between, hard to achieve with flex */
  grid-gap: 1rem;
}

/*****
  MAIN
  ****
  Holds the app content. Content should be responsive on the x axis
  Overflow on the y axis is expected and will be scrollable
*/
main {
  grid-area: main;
  overflow: auto;
  background-color: var(--color-background);
  padding: var(--container-padding);
}

main > div {
  margin-bottom: var(--default-spacing);
}

/********************
  SPECIAL STAND-ALONE
  *******************
  Used in:
  - NonAdmin
  - NoConnection
 */
.standalone-container {
  display: flex;
  flex-direction: column;
  place-items: center;
  padding: 5em;
  padding: 5em 1em;
  text-align: center;
  background-color: var(--color-background);
}
